name: Create val to prod PR

on:
  # schedule:
  #   - cron: "0 11 * * 2"  # Every Tuesday at 11:00 UTC
  workflow_dispatch:
  push:
    branches:
      - bs-auto-prs

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: ".nvmrc"
    - name: Generate PR body
      id: pr_body
      run: |
        BODY=$(.github/commit-log.sh val production) || exit_code=$?
        if [ "$exit_code" == "1" ]; then
          echo "No commits. Skipping PR."
          echo "skip=true" >> $GITHUB_OUTPUT
          exit 0
        fi
        echo "$BODY"
        BODY="${BODY//'%'/'%25'}"
        BODY="${BODY//$'\n'/'%0A'}"
        BODY="${BODY//$'\r'/'%0D'}"
        echo "body=$BODY" >> $GITHUB_OUTPUT
        echo "skip=false" >> $GITHUB_OUTPUT
    - name: Check if PR already exists
      if: steps.pr_body.outputs.skip != 'true'
      id: check_pr
      run: |
        PR_NUM=$(gh pr list --base production --head val --json number --jq '.[0].number')
        if [ -n "$PR_NUM" ]; then
          echo "PR already exists: #$PR_NUM"
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "number=$PR_NUM" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # - name: Create or update PR
    #   if: steps.pr_body.outputs.skip != 'true'
    #   run: |
    #     if [ "${{ steps.check_pr.outputs.exists }}" == "true" ]; then
    #       echo "Updating existing PR #${{ steps.check_pr.outputs.number }}"
    #       gh pr edit ${{ steps.check_pr.outputs.number }} \
    #         --body "${{ steps.pr_body.outputs.body }}"
    #     else
    #       echo "Creating new PR"
    #       gh pr create \
    #         --base production \
    #         --head val \
    #         --title "val â†’ prod" \
    #         --body "${{ steps.pr_body.outputs.body }}" \
    #         --draft
    #     fi
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
